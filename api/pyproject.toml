[project]
name = "api"
version = "0.0.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = ["fastapi>=0.112.2", "uvicorn>=0.30.6"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
  "ruff>=0.6.2",
  "mypy>=1.11.2",
  "pytest>=8.3.2",
  "pytest-asyncio>=0.24.0",
  "pytest-cov>=5.0.0",
  "pytest-xdist>=3.6.1",
  "toml>=0.10.2",
  "types-toml>=0.10.8.20240310",
  "greenlet>=3.0.3",
  "coverage>=7.6.1",
  "httpx>=0.27.0",
  "asgi-lifespan>=2.1.0",
]

[tool.ruff]
line-length = 88
include = ["*.py"]
exclude = ["dist", "build", ".venv"]
target-version = "py311"

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = ["dist", "build", ".venv"]

[tool.ruff.lint]
ignore = [
  "D10",
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
  "D415",
]
select = ["E", "F", "I"]

[tool.pytest.ini_options]
addopts = [
  "-n",
  "auto",
  "-o",
  "console_output_style=progress",
  "--asyncio-mode=auto",
  "--showlocals",
  "--cov=api",
  "--cov=tests",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--cov-report=html",
  # "--cov-fail-under=100", TODO!
]
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
parallel = true
source = ["api", "tests"]
omit = ["*__init__.py"]
concurrency = ["thread", "greenlet", "multiprocessing"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff.lint.pydocstyle]
convention = "google"
