name: ci

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  api:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    defaults:
      run:
        working-directory: ./api

    steps:
      - name: üìï checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üéÅ apt-get update
        run: sudo apt-get update -y

      - name: üòé install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: üêç set up python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: üì¶ install dependencies
        run: uv run bin/install

      - name: üßπ lint
        run: uv run bin/check

      - name: üß™ test
        run: uv run bin/test

      - name: üê≥ build api docker image
        run: docker build -t ghcr.io/anthonycorletti/az-simple-stack:latest .

      - name: üîê login to docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT_GHCR_TOKEN }}

      - name: üöö push api docker image to ghcr
        run: docker push ghcr.io/anthonycorletti/az-simple-stack:latest

      # TODO
      # - name: üè∑Ô∏è tag and push production image
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     docker tag ghcr.io/anthonycorletti/az-simple-stack:latest ghcr.io/anthonycorletti/az-simple-stack:${{ github.ref }}
      #     docker push ghcr.io/anthonycorletti/az-simple-stack:${{ github.ref }}

      - name: ‚òÅÔ∏è log in to azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: set github branch name in env
        run: |
          # if the event is a pull request, use the head ref
          if [ -n "$GITHUB_HEAD_REF" ]; then
            GH_REF_SHORT=${GITHUB_HEAD_REF#refs/heads/}
          else
            GH_REF_SHORT=${GITHUB_REF#refs/heads/}
          fi
          # replace / with - to make a valid container app name
          GH_REF_SHORT=${GH_REF_SHORT//\//-}
          echo "GH_REF_SHORT=${GH_REF_SHORT#refs/heads/}" >> $GITHUB_ENV

      - name: ‚ú® deploy container app
        uses: azure/container-apps-deploy-action@v1
        with:
          containerAppEnvironment: ${{ env.GH_REF_SHORT }}-env
          containerAppName: ${{ env.GH_REF_SHORT }}
          imageToDeploy: ghcr.io/anthonycorletti/az-simple-stack:latest
          location: eastus
          ingress: external
          registryPassword: ${{ secrets.GH_PAT_GHCR_TOKEN }}
          registryUrl: ghcr.io
          registryUsername: ${{ github.actor }}
          resourceGroup: az-simple-stack
          targetPort: 8000

  # ui:
  #   runs-on: ubuntu-latest
  #   needs: api

  #   strategy:
  #     matrix:
  #       node-version: [22.x]

  #   defaults:
  #     run:
  #       working-directory: ./ui

  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #         submodules: true
  #         lfs: false

  #     - name: üéÅ apt-get update
  #       run: sudo apt-get update -y

  #     - name: ü•ü install bun
  #       uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest

  #     - name: üì¶ install dependencies
  #       run: bun install

  #     - name: üßπ lint
  #       run: bun run lint

  #     - name: üß™ test
  #       run: bun run test

  #     - name: üõ†Ô∏è build
  #       run: bun run build

  #     - name: ‚òÅÔ∏è log in to azure
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: ‚ú® deploy static web app
  #       uses: azure/static-web-apps-deploy@v1
  #       with:
  #         azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_THANKFUL_BEACH_0E731BB0F }}
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         action: "upload"
  #         app_location: "/"
  #         api_location: ""
  #         output_location: "build"
